package miracom.프로원정대13기.심화반사전테스트;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class 발레공연 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	
	static int[] danceTimes;
	static int n;
	static int maxTime;

	static boolean isOk(int stageSize) {
		PriorityQueue<Integer> currentDancing = new PriorityQueue<>();

		for (int x = 0; x < n; x++) {
			if (currentDancing.size() < stageSize) {
				currentDancing.add(danceTimes[x]);
			} else {
				currentDancing.add(currentDancing.remove() + danceTimes[x]);
			}
		}

		int lastFinish = Integer.MAX_VALUE;

		while (currentDancing.size() > 0) {
			lastFinish = currentDancing.remove();
		}
		return lastFinish <= maxTime;
	}

	public static void main(String[] args) throws Exception {
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		maxTime = Integer.parseInt(st.nextToken());
		danceTimes = new int[n];

		for (int x = 0; x < n; x++) 
			danceTimes[x] = Integer.parseInt(br.readLine());

		int low = 1;
		int high = n;

		while (low < high) {
			int mid = (low + high) / 2;
			if (isOk(mid)) {
				high = mid;
			} else {
				low = mid + 1;
			}
		}
		System.out.println(low);
	}
}