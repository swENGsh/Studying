package BOJ;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.StringTokenizer;

public class BOJ14503로봇청소기 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;

	static int n, m;
	static int[][] area;
	static ArrayDeque<Node> q;
	
	static class Node{
		int r;
		int c;
		int d;
		public Node(int r, int c, int d) {
			this.r = r;
			this.c = c;
			this.d = d;
		}
	}
	
	static int start_vacuum() {
		int cnt = 0;
		while (!q.isEmpty()) {
			Node cn = q.poll();
			if (area[cn.r][cn.c] == 0) {
				area[cn.r][cn.c] = 2;
				cnt ++;
			}
		}
		return cnt;
	}
	public static void main(String[] args) throws Exception{
		st = new StringTokenizer(br.readLine());
		// input 받기
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		st = new StringTokenizer(br.readLine());
		int r, c, d;
		r = Integer.parseInt(st.nextToken());
		c = Integer.parseInt(st.nextToken());
		d = Integer.parseInt(st.nextToken());
		
		area = new int[n][m];
		for (int i=0; i<n; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j=0; j<m; j++) {
				area[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		q = new ArrayDeque<>();
		q.add(new Node(r, c, d));
		start_vacuum();
	}

}
